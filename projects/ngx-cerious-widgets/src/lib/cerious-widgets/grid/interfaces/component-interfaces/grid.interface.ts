import { ChangeDetectorRef, ElementRef, EventEmitter, QueryList, TemplateRef } from "@angular/core";
import { GridApi } from "../grid-api";
import { GridOptions } from "../grid-options";
import { GridPlugin } from "../grid-plugin";
import { PluginOptions } from "../plugin-options";
import { IGridFooterComponent } from "./grid-footer.interface";
import { IGridHeaderComponent } from "./grid-header.interface";
import { IGridBodyComponent } from "./grid-body.interface";
import { IGridMenuBarComponent } from "./grid-menu-bar.interface";
import { IGridPagerComponent } from "./grid-pager.interface";
import { IGridScrollerComponent } from "./grid-scroller.interface";

export interface IGridComponent {
  gridApi: GridApi;
  plugins: GridPlugin[];
  gridOptions: GridOptions;
  pluginOptions: PluginOptions;
  data: any;
  dataChange: EventEmitter<any>;
  rowClick: EventEmitter<any>;
  rowDoubleClick: EventEmitter<any>;
  rowKeypress: EventEmitter<any>;
  rowKeydown: EventEmitter<any>;
  rowKeyup: EventEmitter<any>;
  cellClick: EventEmitter<any>;
  cellDoubleClick: EventEmitter<any>;
  cellKeypress: EventEmitter<any>;
  cellKeydown: EventEmitter<any>;
  cellKeyup: EventEmitter<any>;
  columnResize: EventEmitter<any>;
  columnVisibilityChange: EventEmitter<any>;
  gridResize: EventEmitter<any>;
  templateRefs: QueryList<TemplateRef<any>>;
  gridContainer: ElementRef;
  gridFooter: IGridFooterComponent;
  gridHeader: IGridHeaderComponent;
  gridBody: IGridBodyComponent;
  gridMenuBar: IGridMenuBarComponent;
  gridPager: IGridPagerComponent;
  gridScroller: IGridScrollerComponent;
  onMouseMove: (event: MouseEvent) => void;
  onMouseUp: (event: MouseEvent) => void;
  resize(): void;
  registerPlugin(plugin: GridPlugin): void;
  registerPlugins(plugins: GridPlugin[]): void;
  shouldShowFooter(): boolean;
  shouldShowMenuBar(): boolean;
  shouldShowPager(): boolean;
  changeDetector: ChangeDetectorRef;
}